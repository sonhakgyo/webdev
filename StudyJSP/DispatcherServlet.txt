Spring MVC 주요 구성요소
    DispatcherServlet
        클라이언트의 요청을 전달 받는다. 컨트롤러에게 클라이언트의 요청을 전달하고 
        컨트롤러가 리턴한 결과값을 뷰에 전달하여 알맞은 응답을 생성하도록 한다.
    HandlerMapping
        클라이언트의 요청 URL을 어떤 컨트롤러가 처리할지를 결정한다.
    Controller 
        클라이언트의 요청을 처리한 뒤, 그 결과를 DispatcherServlet에게 알려준다.
        스트럿츠의 Action과 동일한 역할을 수행한다.
    ViewResolver
        Commander의 처리 결과를 보여줄 View를 결정한다.
    View 
        Commander의 처리 결과를 보여줄 응답을 생성한다.

    
HandlerMapping
    클라이언트의 요청을 Spring의 DispatcherServlet이 처리하도록 설정했다면 다음으로 해야 할 작업은 어떤 HandlerMapping을
    사용할 지의 여부를 지정하는 것이다. HandlerMapping의 클라이언트의 요청을 어떤 컨트롤러가 수행할 지의 여부를 결정해주는데
    구현 클래스는 아래와 같다.
        - BeanNameUrlMapping : 요청 URI와 동일한 이름을 가진 Controller 빈을 매핑한다.
        - SimpleUrlHandlerMapping : 패턴과 컨트롤러의 이름을 비교, URI가 패턴에 매칭될 때 지정한 컨트롤러를 사용한다.
        - ControllerClassNameHandlerMapping : URI와 매칭되는 클래스 이름을 갖는 빈을 컨트롤러로 사용한다(잘 쓰지 않는다).
        - DefaultAnnotationHandlerMapping : @RequestMapping 어노테이션을 이용하여 요청을 처리할 컨트롤러를 구한다(annotation을 사용할 경우 핵심).

    BeanNameUrlMapping
        요청 URI와 동일한 이름을 갖는 Controller 빈으로 하여금 클라이언트의 요청을 처리하도록 한다. 예를 들어, Http://host/hello/action과 같은 요청 url에 대해
        "/hello.action"이라는 이름을 가진 Controller 빈이 해당 요청을 처리하도록 한다.
        