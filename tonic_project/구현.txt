구현

ID 중복확인 구현
        
        MemberDAO에 메서드 추가
            public boolean isExistID(String id) : 해당 ID가 있는지 확인한다.

        script.js 추가수정 : checkID(), checkIDFromClose() 함수 추가 


로그인, 로그아웃 기능 구현
    어떤 페이지를 가던 관리자 계정이 로그인 했다, 회원 계정이 로그인 했다 확인. ---> 세션 역할 막중 
        
        public MemberVO select(String id, String pw) {
            MemberVO member = null;
            sql = "SELECT * FROM member WHERE id=? AND pw=?";

            try {
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, id);
                pstmt.setString(2, pw);
                rs = pstmt.executeQuery();
                if(res.next()) {
                    member = new MemberVO();
                    member.setLog_code(rs.getString("log_code"));
                    member.setId(rs.getString("id"));
                    member.setPw(rs.getString("pw"));
                }
            } catch(Exception e) {
                e.printStackTrace9);
            } finally {
                JDBCUtil.disconnect(pstmt, con);
            }
        } return member;

    doGet()
        MemberDAO dao = new MemberDAO();
        MemberVO member = dao.selectOne(id, pw);


회원가입?? 
    회원관리는 회원가입(입력)부터 삭제, 수정 프로그래밍을 통한 데이터베이스 연동을 의미한다.
    절차
        회원가입 페이지(HTML) 
        --> 가입(유효성 검사 및 데이터베이스 삽입) 
        --> 가입결과(JSP) 
        --> 로그인 페이지(HTML)
        --> 로그인 확인 
        --> 로그인 결과 출력 페이지(JSP) 
        --> 회원정보수정(JSP) 
        --> 수정 확인 및 DB 내용 수정완료
        --> 회원정보 수정 결과 페이지(JSP) 
        --> 로그아웃 페이지(JSP)

