JSTL(Java Standard Tag Libraries) : JSP 표준 태그 라이브러리
        - 액션 태그로 처리할 수 없는 작업을 수행하는 태그 라이브러리
        - if문, for문 등을 대체할 수 있다.
        - 변수 선언(속성 선언)이나 문자열 처리 등이 용이하다.


JSTL 종류
        1. Core(prefix : c) 
                - 일반 프로그래밍과 유사한 변수 사용
                - 제어문(if, for, switch문 등)과 같은 역할의 태그 지원
                - 페이지 이동 기능 지원
        
        2. Formattiong(prefix : fmt) 
                - 숫자, 날짜, 시간 서식 기능 지원
                - 국제화, 다국어 기능 지원

        3. DATABASE(prefix : sql)
                - DB 데이터의 CRUD 기능 지원

        4. XML(prefix : x)
                - XML 문서 처리 기능 지원

        5. Function(prefix : fn) 
                - 문자열 처리 기능 지원

** JSTL을 사용하기 위해서는 매 페이지 상단에 <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core"%> 가 작성되어 있어야 한다.

사용 예시 
    변수 설정
        <c:set> : 변수 설정(변수는 기본적으로 page 영역의 속성으로 저장된다).

        방법1
                <c:set var = "num1" value = "1"/>
        방법2
                <c:set var = "num2"> 2 </c:set>
        방법3
                <c:set var = "num3" value = "${3}"/>  //  EL태그 사용
        방법4
                <c:set var = "num4" value = "4" scope = "request"/>

    삭제
        <c:remove> : 변수(속성) 삭제

        방법
        <c:set var = "name" value = "김종혁"/>
        <c:remove var = "name"/>
        name : ${name} ==> 출력되지 않는다.

    출력문
        <c:out> : 출력문

        방법
        <c:out value = "출력합니다."/>  //  out.write("HTML"), 많이 쓰이지 않는다
        출력합니다.

    단일 if문 
    ** JSTL에서는 else가 없다.
        <c:if> : if문

        방법
        <c:if test = "${Age >= 20}">
            성인입니다.
        </c:if>
        <c:if test = "${Age <  20}">
            급식입니다.
        </c:if>

    다중 if문 
    ** swtich문과 비슷하다.
    ** choose, when, otherwise는 짝꿍이다.
        <c:choose> : 다중 if문

        방법
        <c:choose>
            <c:when test = "${Age >= 20}">
                성인입니다.
            </c:when>
            <c:when test = "${Age >= 17}">
                고등학생입니다.
            </c:when>
            <c:when test = "${Age >= 14}">
                중학생입니다.
            </c:when>
            <c:when test = "${Age >= 8}">
                미취학아동입니다.
            </c:when>
            <c:otherwise>
                급식입니다.
            </c:otherwise>
        </c:choose>

    for문
    
        방법1
        <c:forEach var = "lang" items = "${paramValues.language}">  //  == for(String s : language), 또한 paramValues 자리에는 Array, List가 들어간다.
            ${lang}
        </c:forEach>

        방법2
        <c:forEach var = "str" items = "피카츄, 라이츄, 파이리, 꼬부기, 야도란">  //  배열
            ${str}
        </c:forEach>

        방법3
        <c:forEach var = "i" begin = "1" end = "9" step = "1">  //  for(int i=1; i<=9; i++)과 같다.
            5 * ${i} = ${5*i}
        </c:forEach>

        단, step이 0 이하는 쓸 수 없다.
        <c:forEach var = "j" begin = "10" end = "1" step = "-1">
            ${j}
        </c:forEach>

    StringTokenizer 
        <c:forTokens var = "str" items = "/home/java/member/memberLogin.jsp" delims = "/">
            ${str}
        </c:forTokens>

    try문
    ** 따로 catch는 없다.
        <c:catch var = "exc">
            <c:set var = "result" value = "${param.decimal * 100}"/>  //  parameter로 들어온 decimal
        </c:catch>
        <c:choose>
            <c:when test = "${exc == null}"ho>
                ${param.decimal} * 100 = ${result}
            </c:when>
            <c:otherwise>
                정수를 입력하세요.
            </c:otherwise>
        </c:choose>

    redirect
        <c:redirect url = "Test13.jsp">
            <c:param name = "str" value = "이것은 Test12로부터 넘어온 파라미터"/>
        </c:redirect>
